def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 32

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            res {
                srcDirs 'src/main/res', 'src/main/assets'
            }
        }
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.bnpj.creditapp"
        minSdk 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }


 repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation("com.google.guava:guava:31.1-jre")
    implementation 'com.google.code.gson:gson:2.8.2'

    implementation 'com.github.bumptech.glide:glide:4.9.0'

    implementation 'org.slf4j:slf4j-android:1.7.12'
    // Used by com.daon.sdk.face.liveness
    implementation 'commons-io:commons-io:2.5'
    implementation 'org.slf4j:slf4j-android:1.7.12' 
    ///EKYC
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.daon.fido.client.ixuaf:com.daon.fido.client.ixuaf:4.0.51@aar'
    implementation 'com.daon.fido.client.sdk:com.daon.fido.client.sdk:4.0.51@aar'
    implementation 'com.daon.sdk.authenticator:com.daon.sdk.authcommon:1.0.493@aar'
    implementation 'com.daon.sdk.authenticator:com.daon.sdk.authenticator:1.0.493@aar'
    implementation 'com.daon.sdk.crypto:com.daon.sdk.crypto:1.0.18@aar'
    implementation 'com.daon.sdk.device:com.daon.sdk.device:2.2.68@aar'

    implementation 'com.daon.sdk.face.liveness:com.daon.sdk.face.liveness:5.0.20@aar'
    implementation 'com.daon.sdk.face.quality:com.daon.sdk.face.quality:3.2.0@aar'
    implementation 'com.daon.sdk.face:com.daon.sdk.face:5.0.18@aar'
    implementation 'com.daon.sdk.authenticator:com.daon.sdk.faceauthenticator-0204:1.0.493@aar'

    implementation 'commons-io:commons-io:2.5'

    implementation(name: 'jp.co.polarify.kyc.sdk', ext: 'aar')
    implementation(name: 'jp.co.polarify.kyc.sdk.analyzer', ext: 'aar')
    
    
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    ///NFC
    implementation(name: 'libjeid-full-20220224', ext: 'aar')
}
